#!/bin/sh

#// whisper
#// WSPR beacon for the Raspberry Pi. See accompanying README
#// file for a description on how to use this code.
#// based on the package WsprryPi (https://github.com/JamesP6000/WsprryPi)

#// License:
#//   This program is free software: you can redistribute it and/or modify
#//   it under the terms of the GNU General Public License as published by
#//   the Free Software Foundation, either version 2 of the License, or
#//   (at your option) any later version.
#//
#//   This program is distributed in the hope that it will be useful,
#//   but WITHOUT ANY WARRANTY; without even the implied warranty of
#//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#//   GNU General Public License for more details.
#//
#//   You should have received a copy of the GNU General Public License
#//   along with this program.  If not, see <http://www.gnu.org/licenses/>.

#// lu7did: initial load

#*----------------------------------------------------------------------------
#* Initialization
#* DO NOT RUN EITHER AS A rc.local script nor as a systemd controlled service
#*----------------------------------------------------------------------------

PATH=/sbin:/bin:/usr/sbin:/usr/bin
. /lib/lsb/init-functions
DPATH="/home/pi/WsprryPi/"
LOG="whisper.log"
ERR="whisper.err"
LOCK="whisper.lck"
VERSION="1.1"
TLM="whisper.tlm"
#*-----------------------------------------------------------------------------
#* getTelemetry()
#* Create telemetry and WSPR frame
#*-----------------------------------------------------------------------------
getTelemetry () {
   TEMP=`sudo python picheck.py -t`
   VOLT=`sudo python picheck.py -v`
   OPST=`sudo python picheck.py -s`
   FREQ=`sudo python picheck.py -f`
   echo "Whisper: "`date`" Telemetry: "$TEMP" Â°C "$VOLT" V "$FREQ" MHz ("$OPST")" | tee -a $DPATH$TLM
   CMD="python wsprtlm.py -g "$GRID$GRIX" -e "$HEIGHT" -c "$CHANNEL" -b "$VOLT" -t "$TEMP" -l -q -p"  
   TLMG=`$CMD`
   echo "Whisper: "`date`" WSPR TLMF: "$TLMG  
   return 0
}

#*----------------------------------------------------------------------------
#* Beacon specific data configuration 
#*----------------------------------------------------------------------------
DAEMON="wspr"
OPTS=" -r -o -s "
CALLSIGN="LU7DID "
GRID="GF05"
GRIX="TE"
POWER="20 "
BAND="20m 0 0 0 0  "
HEIGHT=40
CHANNEL=0

#*---- Find number of instances running

cd $DPATH
N=`ps -ef | pgrep "wspr" | wc -l`

echo "Whisper: "`date`" Program "$DAEMON" Version "$VERSION 2>$DPATH$ERR | tee -a $DPATH$LOG
#*---- React to argument (see whisper for command options)
case $1 in

#*---- Start the beacon. Control if instances are running and avoid reentrancy
	start)
               if [ -f $DPATH$LOCK ]; then
                  echo "Whisper: "`date`" Process lock found, terminating" 2>$DPATH$ERR | tee -a $DPATH$LOG
                  exit 0
               fi

#*---- Collect telemetry

               getTelemetry  2>$DPATH$ERR | tee -a $DPATH$LOG
#*---- If already running log telemetry and leave

               if [ $N \> 0 ]; then
                  echo "Whisper: "`date`" Daemon already running, exit" 2> $DPATH$ERR | tee -a $DPATH$LOG
                  exit 0
               else
#*---- Start daemon in the background

                  echo "Whisper: "`date`" Starting daemon" 2> $DPATH$ERR | tee -a $DPATH$LOG
                  sudo $DPATH$DAEMON $OPTS $CALLSIGN $GRID $POWER $BAND 2>$DPATH$ERR >> $DPATH$LOG & 
               fi  
		;;
#*---- Stop the beacon if an instance is found running

	stop)
               if [ $N \> 0 ]; then
          
                  echo "Whisper:" `date`" Stopping daemon" 2> $DPATH$ERR | tee -a $DPATH$LOG
                  S=`ps -ef | pgrep wspr`
                  for i in $S; do
                     echo "Whisper: "`date`" Killing PID("$i")" 2> /dev/null | tee -a $DPATH$LOG
                     sudo kill $i 2> /dev/null | tee -a $DPATH$LOG
                  done
                else
                  echo "Whisper:"`date`" No daemon found, exit" 2> /dev/null | tee -a $DPATH$LOG
		  exit 0
		fi
  		;;
#*---- Restart or  force-reload by stop and start
	restart|force-reload)
                echo "Whisper: "`date`" Forcing reload" 2> /dev/null | tee -a $DPATH$LOG
                sudo $0 stop  2> $DPATH$ERR | tee -a $DPATH$LOG
                sudo $0 start 2> $DPATH$ERR | tee -a $DPATH$LOG
  		;;
#*---- Another alias to restart

	try-restart)
                echo "Whisper: "`date`" Trying to restart" 2>$DPATH$ERR | tee -a $DPATH$LOG
		if sudo $0 status >/dev/null; then
		   sudo $0 restart
		else
		   exit 0
		fi
		;;
#*---- Yet another alias to restart

	reload)
                echo "Whisper: "`date`" Script reload" 2> $DPATH$ERR | tee -a $DPATH$LOG
		sudo $0 restart
                exit 3
		;;
#*---- Stop the beacon and create a special lock file which will prevent further launches until reset

        lock)
                echo "Whisper: "`date`" Script locked" 2> $DPATH$ERR | tee -a $DPATH$LOG
                sudo touch $DPATH$LOCK 2> $DPATH$ERR | tee -a $DPATH$LOG
                sudo $0 stop

                exit 4
                ;;

#*---- Erase the lock file and launch

        reset)
                echo "Whisper: "`date`" Script reload" 2> $DPATH$ERR | tee -a $DPATH$LOG
                sudo rm -r $DPATH$LOCK 2> $DPATH$ERR | tee -a $DPATH$LOG
                sudo $0 start
                exit 3
                ;;
#*---- Just computes and log the status

	checkpoint)
                echo "Whisper: "`date`" WSPR Log checkpoint("$2 $3 $4 $5")" 2> $DPATH$ERR | tee -a $DPATH$LOG
                exit 0
                ;;
	status)
                getTelemetry 2>$DPATH$ERR | tee -a $DPATH$LOG
                echo "Whisper: "`date`" WSPR Process List Status" 2> $DPATH$ERR | tee -a $DPATH$LOG
           	S=`ps -ef | pgrep wspr | wc -l`
		if [ $S \> 0 ]; then
              	   echo "Whisper: "`date`" WSPR Process count("$S")" 2> $DPATH$ERR | tee -a $DPATH$LOG
   		   V=`ps -ef | pgrep wspr`
                   for i in $V; do
  			echo "Whisper: "`date`" Process PID("$i")" 2> $DPATH$ERR | tee -a $DPATH$LOG
 		   done
		else
 		   echo "Whisper: "`date`" No wspr processes found" 2> $DPATH$ERR | tee -a $DPATH$LOG
  		fi


		;;
	*)
		echo "Usage: $0 {start|stop|lock|reset|restart|try-restart|checkpoint|force-reload|status}"
		exit 2
		;;
esac
